---
// Astro tools
import { getCollection } from "astro:content";

// Astro Types
import type { CollectionEntry } from "astro:content";

// Components
import BaseLayout from "@/layouts/BaseLayout.astro";
import PostCard from "@/components/ui/PostCard.astro";
import ContactSection from "@/components/sections/ContactSection.astro";
import Heading from "@/components/ui/Heading.astro";
import CategoryCloud from "@/components/ui/CategoryCloud.astro";

// Utils
import { formatPosts, slugify } from "@/scripts/utils";
import { getEntries } from "astro:content";

const { author } = Astro.params;

if (author === undefined) {
  return Astro.redirect("/404");
}

const allPosts = await getCollection("posts", ({ data }) =>
  import.meta.env.PROD ? !data.isDraft : true
);
const formattedPosts: CollectionEntry<"posts">[] = formatPosts(allPosts);

const allAuthors = await getEntries(
  formattedPosts.map((post) => post.data.author)
);

const postsAuthor = allAuthors.filter((a) => slugify(a.data.name) === author);

const authorName = postsAuthor[0].data.name;
const authorPosts = formattedPosts.filter(
  (post) => post.data.author.id === postsAuthor[0].id
);
---

<BaseLayout
  title=`${authorName} Posts`
  description=`Posts written by ${authorName}`>
  <section class="section | flow">
    <Heading
      tagName="h1"
      size="h2"
      >Posts by <span>{authorName}</span></Heading
    >
    <div class="posts-wrapper | grid-auto">
      {authorPosts.map((post) => <PostCard {post} />)}
    </div>
    <CategoryCloud />
  </section>

  <ContactSection />
</BaseLayout>

<style>
  section {
    > * {
      --flow-spacer: 2em;
    }
  }

  h1 {
    margin-block-end: 3rem;
    text-align: center;

    span {
      color: var(--clr-primary);
    }
  }
</style>
