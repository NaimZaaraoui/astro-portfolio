---
// Astro tools
import { getCollection } from "astro:content";

// Astro Types
import type { GetStaticPaths } from "astro";
import type { CollectionEntry } from "astro:content";

// Components
import BaseLayout from "@/layouts/BaseLayout.astro";
import PostCard from "@/components/ui/PostCard.astro";
import ContactSection from "@/components/sections/ContactSection.astro";
import Heading from "@/components/ui/Heading.astro";
import CategoryCloud from "@/components/ui/CategoryCloud.astro";

// Utils
import { formatPosts, slugify } from "@/scripts/utils";
import { getEntries } from "astro:content";

export const getStaticPaths = (async () => {
  const allPosts = await getCollection("posts", ({ data }) =>
    import.meta.env.PROD ? !data.isDraft : true
  );
  const formattedPosts: CollectionEntry<"posts">[] = formatPosts(allPosts);

  const allCategories = [
    ...new Set(formattedPosts.map((post) => post.data.category)),
  ];

  const paths = allCategories.map((category) => {
    const categoryPosts = formattedPosts.filter(
      ({ data }) => data.category === category
    );

    return {
      params: {
        category: slugify(category),
      },
      props: {
        categoryName: category,
        categoryPosts,
      },
    };
  });

  return paths;
}) satisfies GetStaticPaths;

const { categoryName, categoryPosts } = Astro.props;
---

<BaseLayout
  title=`${categoryName} Posts`
  description=`Posts About ${categoryName}`
>
  <section class="section | flow">
    <Heading tagName="h1" size="h2"
      >Posts about <span>{categoryName}</span></Heading
    >
    <div class="posts-wrapper | grid-auto">
      {categoryPosts.map((post) => <PostCard {post} />)}
    </div>
    <CategoryCloud />
  </section>

  <ContactSection />
</BaseLayout>

<style>
  section {
    > * {
      --flow-spacer: 2em;
    }
  }

  h1 {
    margin-block-end: 3rem;
    text-align: center;

    span {
      color: var(--clr-primary);
    }
  }
</style>
